:where(html) {
    --button-bg: var(--white);
    --button-bg-active: var(--negative);
    --button-hit-area: var(--hit-area-height);
}

button {
    text-decoration: none;

    display: inline-flex;
    align-items: center;
    justify-content: center;
    align-self: start;

    line-height: 1.1;
    background-color: var(--button-bg);
    transition:
        background 220ms ease-in-out,
        180ms box-shadow ease-in-out;

    min-width: var(--button-hit-area);
    min-height: var(--button-hit-area);
    width: fit-content;
    height: fit-content;

    user-select: none;
    -webkit-tap-highlight-color: transparent;

    border: var(--border);
    padding: 0 var(--gap-1);

    &:has(svg) {
        justify-content: space-around;
        gap: var(--gap-1);
    }
    & svg {
        pointer-events: none;
        /* pointer-events: stroke | fill */
    }

    &.text {
        background-color: transparent !important;
        border: none !important;
        box-shadow: none !important;
        &:focus {
            font-weight: var(--font-bold);
        }
    }

    &.icon {
        max-width: max-content;
    }

    &.active {
        background-color: var(--button-bg-active);
    }

    &:disabled {
        opacity: var(--opacity-disabled);
        cursor: not-allowed;
    }
    &.stretch {
        width: 100%;
    }
}

.buttonGroup {
    display: flex;
    flex-wrap: wrap;
    /*border: var(--border-width) solid currentColor;*/
    height: fit-content;

    & button {
        position: relative;

        display: flex;
        flex-grow: 1;
        &:focus {
            z-index: 2;
        }
    }

    &:focus-within {
        border-color: var(--neutral);
    }
}

.buttonGroup.vertical {
    flex-direction: column;
}

.buttonGroup button:not(:hover, :focus, :focus-visible) {
    border-radius: 0;
    box-shadow: none !important;
}

.buttonGroup:not(.vertical) button:not(:last-child) {
    border-right: calc(var(--border-width) / 2) solid currentColor;
}
.buttonGroup:not(.vertical) button:not(:first-child) {
    border-left: calc(var(--border-width) / 2) solid currentColor;
}

.buttonGroup.vertical button:not(:first-child) {
    border-top: calc(var(--border-width) / 2) solid currentColor;
}
.buttonGroup.vertical button:not(:last-child) {
    border-bottom: calc(var(--border-width) / 2) solid currentColor;
}

.buttonGroup > *:first-child {
    border-top-left-radius: var(--button-border-radius);
    border-bottom-left-radius: var(--button-border-radius);
}
.buttonGroup > *:last-child {
    border-top-right-radius: var(--button-border-radius);
    border-bottom-right-radius: var(--button-border-radius);
}

.buttonGroup.vertical > *:first-child {
    border-top-left-radius: var(--button-border-radius);
    border-top-right-radius: var(--button-border-radius);
}
.buttonGroup.vertical > *:last-child {
    border-bottom-left-radius: var(--button-border-radius);
    border-bottom-right-radius: var(--button-border-radius);
}
