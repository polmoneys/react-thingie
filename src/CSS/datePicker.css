.react-aria-DatePicker {
    &[data-invalid] {
    }

    &[data-open] {
    }

    & .react-aria-Label {
    }
    .react-aria-Group {
        display: flex;
        width: fit-content;
        align-items: center;
    }

    .react-aria-Button {
        background: var(--neutral);
        color: currentColor;
        forced-color-adjust: none;
        border: none;

        &[data-pressed] {
            box-shadow: none;
            background: var(--positive);
        }

        &[data-focus-visible] {
            outline: 2px solid currentColor;
            outline-offset: 2px;
        }
    }

    .react-aria-DateInput {
        padding: var(--gap-1) 2.5rem var(--gap-1) var(--gap-2);
        background-color: var(--white);
    }
}

.react-aria-Popover {
    background-color: var(--white);
    font-size: var(--font-size-0);

    &[data-trigger='DatePicker'] {
        max-width: unset;
    }
    & * {
        font-size: var(--font-size-0);
    }
}

.react-aria-CalendarCell {
    &[data-today] {
    }

    &[data-unavailable] {
    }

    &[data-selected] {
        background-color: var(--positive) !important;
    }
    &[data-hovered] {
    }
    &[data-pressed] {
    }

    &[data-focused]:not([data-selected]) {
        outline-color: var(--positive);
        color: var(--positive);
    }
    &[data-isFocusVisible] {
        outline-color: var(--positive);
    }
}
.react-aria-Dialog {
}

.react-aria-Calendar {
}

.react-aria-Tree {
    display: flex;
    flex-direction: column;
    gap: 2px;
    overflow: auto;
    padding: var(--gap-1);
    border: var(--border);
    border-radius: var(--border-radius);
    box-shadow: var(--shadow);
    background: var(--white);
    forced-color-adjust: none;
    outline: none;
    width: 250px;
    max-height: 300px;

    &[data-focused] {
        outline: 2px solid var(--negative);
        outline-offset: 5px;
    }
    &[data-focus-visible] {
        border-color: var(--positive);
    }
    & .react-aria-TreeItem {
        background-color: var(--neutral);
        display: flex;
        align-items: center;
        gap: var(--gap-1);
        min-height: 28px;
        padding: var(--gap-1);
        border-radius: var(--border-radius);
        outline: none;
        cursor: default;
        position: relative;
        transform: translateZ(0);

        & .tree-chevron {
            padding-left: calc((var(--tree-item-level) - 1) * var(--gap-2));
        }

        button {
            all: unset;
            display: flex;
            visibility: hidden;
            align-items: center;
            justify-content: center;
            height: 100%;
        }

        &[data-has-child-items] .tree-chevron {
            visibility: visible;
        }

        &[data-expanded] {
            & .tree-chevron svg {
                rotate: 90deg;
            }
        }

        &[data-hovered] {
            background-color: var(--positive);
        }

        &[data-focused] {
            background-color: var(--positive);
        }

        &[data-selected] {
            background-color: var(--positive);
        }
    }
}
