:where(html) {
    --zero: 0 !important;
    --none: none !important;
    --transparent: transparent !important;

    --font-size: calc(22 / 16 * 1rem);
    --font-xs: 0.7rem;
    --font-sm: 0.9rem;
    --font-md: 1.1rem;
    --font-lg: 1.333rem;
    --font-xl: 1.8rem;

    --font-weight: 400;
    --font-bold: 600;

    --font-line-height: 1.4;
    --font-line-height-sm: 1;
    --shout: uppercase !important;

    --min-height: max(44px, 2em);
    --min-width: 10ch;

    /* if we were brave we'd use more em*/
    --gap-1: 0.4rem;
    --gap-2: 0.8rem;
    --gap-3: 1.2rem;
    --gap-4: 1.8rem;
    --gap-5: 2rem;

    --px: 0 var(--gap-3);
    --pxy: var(--gap-3);

    --shadow: 0 1px 3px hsla(0, 0%, 0%, 0.12), 0 1px 2px hsla(0, 0%, 0%, 0.24);
    --border-radius: 0.2rem;

    --border-width: 2px;
    --border: var(--border-width) solid currentColor;
    --ring-color: var(--grey-20);
    --ringKeyboard-color: var(--positive);
    --ios-notch: env(safe-area-inset-top) env(safe-area-inset-right)
        env(safe-area-inset-bottom) env(safe-area-inset-left);

    --scrollbar-size: min(8px, 0.8em);
    --opacity-disabled: 0.6;
    --bg-disabled: var(--neutral);
    --animation-duration: 0.3s;

    --z-0: -1;
    --z-1: 1;
    --z-2: 2;
    --z-max: 999;

    --sticky-top: var(--gap-3);
}

*,
:after,
:before {
    box-sizing: border-box;
    color: currentColor;
}
* {
    margin: 0;
    padding: 0;
    scroll-behavior: smooth;
}

html {
    -moz-tab-size: 4;
    tab-size: 4;
    color-scheme: light;
    font-family: system-ui;

    overflow-y: scroll;

    -ms-overflow-style: -ms-autohiding-scrollbar;
    -webkit-overflow-scrolling: touch;
    -webkit-text-size-adjust: 100%;
    text-size-adjust: 100%;

    /* sync bgcolor with *-scrollbar-track */
    background-color: var(--grey);
    color: var(--black);
    /*accent-color: var(--positive);*/

    &::-webkit-scrollbar {
        width: var(--scrollbar-size);
        height: var(--scrollbar-size);
    }
    & *::-webkit-scrollbar {
        width: var(--scrollbar-size);
        height: var(--scrollbar-size);
    }

    &::-webkit-scrollbar-track {
        background-color: var(--grey);
    }
    & *::-webkit-scrollbar-track {
        background-color: var(--grey);
    }

    &::-webkit-scrollbar-corner {
        background-color: var(--grey-80);
    }
    & *::-webkit-scrollbar-corner {
        background-color: var(--grey-80);
    }

    &::-webkit-scrollbar-thumb {
        background-color: var(--grey-80);
        outline: 1px solid var(--transparent);
    }

    & *::-webkit-scrollbar-thumb {
        background-color: var(--grey-80);
        outline: 1px solid var(--transparent);
    }

    & *::selection {
        color: var(--neutral);
        text-shadow: 0 0.1px 0px rgba(0, 0, 0, 1);
    }

    @supports (scrollbar-gutter: stable) {
        & {
            overflow-y: auto;
            scrollbar-gutter: stable;
            /* scrollbar-gutter: stable both-edges; */
        }
    }
}

body {
    -webkit-tap-highlight-color: transparent;

    text-rendering: optimizeLegibility;
    -webkit-font-smoothing: antialiased;
    font-synthesis: none;
    font-family: system-ui, sans-serif;
    font-optical-sizing: auto;
    font-style: normal;
    font-size: var(--font-size);
    font-weight: var(--font-weight);
    line-height: var(--font-line-height);

    width: 100%;
    height: 100%;
    block-size: 100%;
    inline-size: 100%;
}

:is(h1, h2, h3) {
    word-wrap: break-word;
    /* text-wrap: balance; */
    text-wrap: pretty;
    overflow-wrap: break-word;
    font-size: 44px;
    font-weight: var(--font-bold);
    line-height: var(--font-line-height-sm, 1.15);
}

:is(p) {
    /* https://developer.mozilla.org/en-US/docs/Web/CSS/font-size-adjust */
    -webkit-text-size-adjust: none;
    text-size-adjust: none;

    /* no orphans */
    text-wrap: pretty;

    &::selection {
        font-weight: bolder;
        /* text-decoration: underline; */
    }
}

h1:has(span, b),
p:has(span, b) {
    font-size: inherit;
}

:is(b, strong) {
    font-weight: var(--font-bold);
}

img {
    border: 0;
    border-style: none;
    max-width: 100%;
    height: auto;
    background-repeat: no-repeat;
    vertical-align: middle;
    object-fit: cover;
    shape-margin: 0.75rem;
}

a:is(:not([class])) {
    hyphens: none;
    text-decoration: underline;
    text-decoration-skip-ink: auto;
    text-decoration-thickness: 0.1em;
    text-underline-offset: 0.09em;
    outline: none;

    width: fit-content;

    &:is(:visited, :hover) {
        color: var(--grey);
        text-shadow: none;
        touch-action: manipulation;
    }
}

:is(a, button) {
    text-transform: none;
    &:focus {
        outline: 1px solid transparent;
    }
}

:where(
    button,
    input[type='text'],
    input[type='checkbox'],
    input[type='radio'],
    select
) {
    -moz-appearance: none;
    -webkit-appearance: none;
    appearance: none;
    font: inherit;
    font-family: inherit;
    font-size: inherit;
    border-style: solid;
    border: none;
    padding: 0;
    color: currentColor;
    cursor: pointer;
    /* Not removed via appearance */
    margin: 0;
    &:focus {
        outline: none;
    }
}

:where(html) {
    --button-bg: var(--white);
    --button-bg-active: var(--negative);
    --button-hit-area: var(--min-height);
}

button {
    text-decoration: none;

    display: inline-flex;
    align-items: center;
    justify-content: center;
    /*align-self: start;*/

    line-height: 1.1;
    background-color: var(--button-bg);
    transition:
        background 220ms ease-in-out,
        180ms box-shadow ease-in-out;

    min-width: var(--button-hit-area);
    min-height: var(--button-hit-area);
    width: fit-content;
    height: fit-content;

    user-select: none;
    -webkit-tap-highlight-color: transparent;

    border: var(--border);
    padding: var(--px);

    transition-property: background-color, transform;
    transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
    transition-duration: 0.15s;

    &:hover {
        background-color: var(--neutral);
    }
    &:active {
        transform: scale(0.97);
    }
    &:has(svg) {
        justify-content: space-around;
        gap: var(--gap-1);
    }
    & svg {
        pointer-events: none;
        /* pointer-events: stroke | fill */
    }

    &.text {
        background-color: transparent !important;
        border: none !important;
        box-shadow: none !important;
        &:focus {
            font-weight: var(--font-bold);
        }
    }

    &.icon {
        max-width: max-content;
    }

    &.active {
        background-color: var(--button-bg-active);
    }

    &:disabled {
        opacity: var(--opacity-disabled);
        cursor: not-allowed;
    }
    &.stretch {
        width: 100%;
    }

    &.reset {
        all: unset;
    }

    &:has([data-icon]) {
        border: transparent;
    }

    &:has([data-icon]):focus-within {
        & svg {
            fill: var(--ring-color);
        }
    }

    &:has([data-icon]):focus-visible {
        & svg {
            fill: var(--ringKeyboard-color);
        }
    }
}

/*button,
[type='button'],
[type='reset'],
[type='submit'] {
    -webkit-appearance: button;
}*/

:where(input[type='text']) {
    /* iOS */
    --input-font-size: max(16px, 1em);
    font-size: --input-font-size;
    padding: var(--px);
    min-height: var(--min-height);
}

label:has(input[type='radio']) {
    position: relative;
}

input[type='radio'] {
    width: 100%;
    height: 100%;
    position: absolute;
    inset: 0;
}

input[type='checkbox'] {
    --checkbox-bg: var(--white);
    --checkbox-hit-area: var(--min-height);
    height: var(--checkbox-hit-area);
    width: var(--checkbox-hit-area);
    aspect-ratio: 1;
    background-color: var(--checkbox-bg);
    position: relative;
    border: var(--border);
}

input[type='checkbox']:not([disabled]):checked {
    &::after {
        --checkbox-indeterminate-height: 8px;
        position: absolute;
        content: '';
        background-color: currentColor;
        height: var(--checkbox-indeterminate-height);
        width: calc(100% - 20px);
        left: 10px;
        top: 50%;
        transform: translateY(-50%) rotate(-45deg);
        border-radius: var(--border-radius);
    }
}

input[type='checkbox']:indeterminate {
    &::after {
        --checkbox-indeterminate-height: 8px;
        position: absolute;
        content: '';
        background-color: currentColor;
        height: var(--checkbox-indeterminate-height);
        width: calc(100% - 20px);
        left: 10px;
        top: 50%;
        transform: translateY(-50%);
        border-radius: var(--border-radius);
    }
}

input[type='range'] {
    accent-color: var(--info);
}

select {
    padding: 0 44px 0 var(--gap-2);
    min-height: var(--button-hit-area);

    &::-ms-expand {
        display: none;
    }
}

/* <Ring> component */
.ringless {
}
.ring {
    border: var(--border) !important;
    border-color: var(--ring-color) !important;
}
.ringKeyboard {
    border: var(--border) !important;
    border-color: var(--ringKeyboard-color) !important;
}

ul,
li {
    list-style: none;
}

table {
    border-color: currentColor;
}

fieldset {
    border-color: var(--transparent);
}

legend {
    padding: 0;
}

summary {
    display: list-item;
    cursor: pointer;
}

::-webkit-inner-spin-button,
::-webkit-outer-spin-button {
    height: auto;
}

/*::-webkit-file-upload-button {
    -webkit-appearance: button;
    font: inherit;
}*/

@view-transition {
    navigation: auto;
}

@media (prefers-reduced-motion: reduce) {
    html:focus-within {
        scroll-behavior: auto;
    }
    * {
        animation-delay: -1ms;
        animation-duration: 1ms;
        animation-iteration-count: 1;
        background-attachment: initial;
        scroll-behavior: auto;
        transition-delay: 0s;
        transition-duration: 0s;
    }

    @view-transition {
        navigation: none;
    }
}
