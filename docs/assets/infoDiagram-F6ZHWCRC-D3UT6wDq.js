import{_ as e,l as o,H as s,e as p,I as n}from"./Stream-CYkrBE0N.js";import{p as m}from"./treemap-75Q7IDZK-CX1b6ggk.js";import"./index-CJO-bn05.js";import"./dayjs.min-CqV9D_vH.js";import"./index-BQTRyv96.js";import"./index-B6JMZUVO.js";import"./Lite-C7iPJxDn.js";import"./useKeyboard-DSNFmm-f.js";import"./_baseUniq-zRbUTIuY.js";import"./_basePickBy-DfGSFiL7.js";import"./clone-DuD66xlL.js";var g={parse:e(async r=>{const a=await m("info",r);o.debug(a)},"parse")},v={version:n.version+""},d=e(()=>v.version,"getVersion"),c={getVersion:d},l=e((r,a,i)=>{o.debug(`rendering info diagram
`+r);const t=s(a);p(t,100,400,!0),t.append("g").append("text").attr("x",100).attr("y",40).attr("class","version").attr("font-size",32).style("text-anchor","middle").text(`v${i}`)},"draw"),f={draw:l},V={parser:g,db:c,renderer:f};export{V as diagram};
